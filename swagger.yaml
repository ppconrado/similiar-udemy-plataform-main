---
openapi: 3.0.0
info:
  title: Challenge 02 - Udemy School - V2
  version: 1.0.0-oas3
servers:
- url: "http://localhost:3000/api/v1"
tags:
- name: Student
- name: Instructor
- name: Administrator
- name: Administrator > Student
- name: Administrator > Instructor
paths:
  /student/register:
    post:
      tags:
      - Student
      summary: Register
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: John Doe
                email: john93d@example.com
                password: hashedpassword1234@H
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /student/login:
    post:
      tags:
      - Student
      summary: Login
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: john93d@example.com
                password: hashedpassword1234@H
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /student/update:
    put:
      tags:
      - Student
      summary: Update
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: John Doe
                email: john93d@example.com
                password: hashedpassword1234@H
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /student/delete:
    delete:
      tags:
      - Student
      summary: Delete
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /student/about:
    get:
      tags:
      - Student
      summary: About
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /instructor/register:
    post:
      tags:
      - Instructor
      summary: Register
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: John Doe
                email: johndoe1@example.com
                password: hashedpAssword123
                specialty: Developer
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /instructor/login:
    post:
      tags:
      - Instructor
      summary: Login
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: johndoe1@example.com
                password: hashedpAssword123
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /instructor/update:
    put:
      tags:
      - Instructor
      summary: Update
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: John Doe
                email: johndoe1@example.com
                password: hashedpassword1234
                specialty: Hacker
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /instructor/delete:
    delete:
      tags:
      - Instructor
      summary: Delete
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /admin/students:
    get:
      tags:
      - Administrator > Student
      summary: All Students
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /admin/student/64f0c3ae2257a97d234ef37f:
    get:
      tags:
      - Administrator > Student
      summary: Student With Id
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
    put:
      tags:
      - Administrator > Student
      summary: Student With Id
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: John Doe
                email: john1012@example.com
                password: hashedpassword1234
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /admin/student/64eee21a8ca9968ee17d12ec:
    delete:
      tags:
      - Administrator > Student
      summary: Student With Id
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /admin/instructors:
    get:
      tags:
      - Administrator > Instructor
      summary: All Instructors
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /admin/instructor/64f0c4812257a97d234ef383:
    get:
      tags:
      - Administrator > Instructor
      summary: Instructor With Id
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
    put:
      tags:
      - Administrator > Instructor
      summary: Instructor With Id
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: John Doe
                email: johndoe12@example.com
                password: hashedpassword1234
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /admin/instructor/64ece49d369e5db12ffd916f:
    delete:
      tags:
      - Administrator > Instructor
      summary: Instructor With Id
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
  /admin/login:
    post:
      tags:
      - Administrator
      summary: Login
      parameters:
      - name: Content-Type
        in: header
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: admin@admin.com
                password: adminPassword
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
      security:
      - bearerAuth: []
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
